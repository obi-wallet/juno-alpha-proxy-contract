/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.10.0.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

export interface AdminResponse {
  admin: string;
  [k: string]: unknown;
}
export type ExecuteMsg = {
  execute: {
    msgs: CosmosMsgForEmpty[];
    [k: string]: unknown;
  };
} | {
  propose_update_admin: {
    new_admin: string;
    [k: string]: unknown;
  };
} | {
  confirm_update_admin: {
    [k: string]: unknown;
  };
} | {
  add_hot_wallet: {
    new_hot_wallet: HotWallet;
    [k: string]: unknown;
  };
} | {
  rm_hot_wallet: {
    doomed_hot_wallet: string;
    [k: string]: unknown;
  };
};
export type CosmosMsgForEmpty = {
  bank: BankMsg;
} | {
  custom: Empty;
} | {
  staking: StakingMsg;
} | {
  distribution: DistributionMsg;
} | {
  wasm: WasmMsg;
};
export type BankMsg = {
  send: {
    amount: Coin[];
    to_address: string;
    [k: string]: unknown;
  };
} | {
  burn: {
    amount: Coin[];
    [k: string]: unknown;
  };
};
export type Uint128 = string;
export type StakingMsg = {
  delegate: {
    amount: Coin;
    validator: string;
    [k: string]: unknown;
  };
} | {
  undelegate: {
    amount: Coin;
    validator: string;
    [k: string]: unknown;
  };
} | {
  redelegate: {
    amount: Coin;
    dst_validator: string;
    src_validator: string;
    [k: string]: unknown;
  };
};
export type DistributionMsg = {
  set_withdraw_address: {
    address: string;
    [k: string]: unknown;
  };
} | {
  withdraw_delegator_reward: {
    validator: string;
    [k: string]: unknown;
  };
};
export type WasmMsg = {
  execute: {
    contract_addr: string;
    funds: Coin[];
    msg: Binary;
    [k: string]: unknown;
  };
} | {
  instantiate: {
    admin?: string | null;
    code_id: number;
    funds: Coin[];
    label: string;
    msg: Binary;
    [k: string]: unknown;
  };
} | {
  migrate: {
    contract_addr: string;
    msg: Binary;
    new_code_id: number;
    [k: string]: unknown;
  };
} | {
  update_admin: {
    admin: string;
    contract_addr: string;
    [k: string]: unknown;
  };
} | {
  clear_admin: {
    contract_addr: string;
    [k: string]: unknown;
  };
};
export type Binary = string;
export type Addr = string;
export type Timestamp = Uint64;
export type Uint64 = string;
export type PeriodType = "DAYS" | "MONTHS";
export interface Coin {
  amount: Uint128;
  denom: string;
  [k: string]: unknown;
}
export interface Empty {
  [k: string]: unknown;
}
export interface HotWallet {
  address: Addr;
  current_period_reset: Timestamp;
  period_multiple: number;
  period_type: PeriodType;
  spend_limits: CoinLimit[];
  [k: string]: unknown;
}
export interface CoinLimit {
  coin_limit: Coin;
  limit_remaining: Uint128;
  [k: string]: unknown;
}
export interface HotWalletsResponse {
  hot_wallets: HotWallet[];
  [k: string]: unknown;
}
export interface InstantiateMsg {
  admin: string;
  hot_wallets: HotWallet[];
  [k: string]: unknown;
}
export type MigrateMsg = string;
export type QueryMsg = {
  admin: {
    [k: string]: unknown;
  };
} | {
  can_execute: {
    msg: CosmosMsgForEmpty;
    sender: string;
    [k: string]: unknown;
  };
} | {
  hot_wallets: {
    [k: string]: unknown;
  };
};