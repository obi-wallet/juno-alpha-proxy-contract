{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "InstantiateMsg",
  "type": "object",
  "required": [
    "admin",
    "fee_lend_repay_wallet",
    "home_network",
    "hot_wallets",
    "signers",
    "uusd_fee_debt"
  ],
  "properties": {
    "admin": {
      "type": "string"
    },
    "fee_lend_repay_wallet": {
      "type": "string"
    },
    "home_network": {
      "type": "string"
    },
    "hot_wallets": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/HotWallet"
      }
    },
    "signers": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "uusd_fee_debt": {
      "$ref": "#/definitions/Uint128"
    }
  },
  "definitions": {
    "CoinLimit": {
      "type": "object",
      "required": [
        "amount",
        "denom",
        "limit_remaining"
      ],
      "properties": {
        "amount": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "denom": {
          "type": "string"
        },
        "limit_remaining": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        }
      }
    },
    "HotWallet": {
      "type": "object",
      "required": [
        "address",
        "current_period_reset",
        "period_multiple",
        "period_type",
        "spend_limits"
      ],
      "properties": {
        "address": {
          "type": "string"
        },
        "current_period_reset": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "default": {
          "type": [
            "boolean",
            "null"
          ]
        },
        "period_multiple": {
          "type": "integer",
          "format": "uint16",
          "minimum": 0.0
        },
        "period_type": {
          "$ref": "#/definitions/PeriodType"
        },
        "spend_limits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CoinLimit"
          }
        },
        "usdc_denom": {
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    "PeriodType": {
      "type": "string",
      "enum": [
        "DAYS",
        "MONTHS"
      ]
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    }
  }
}
